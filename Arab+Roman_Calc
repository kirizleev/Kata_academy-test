import java.util.Scanner;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner in = new Scanner(System.in);
        System.out.println("Введите символы для вычисления арифметического выражения через пробел (римские или арабские целые числа от 1 до 10");
        String calcInput = in.nextLine();
        in.close();
        String[] inputArr = calcInput.split(" ");

        String a = inputArr[0];
        String sign = inputArr[1];
        String b = inputArr[2];

        try {
            int intA = Integer.parseInt(a);
            int intB = Integer.parseInt(b);
            calc(intA, intB, sign, true);
        }catch(Exception e){
            int intA = romanToNumber(a);
            int intB = romanToNumber(b);
            calc(intA, intB, sign, false);
        }
    }

    public static void calc(int int1, int int2, String sign, boolean isArabic) throws Exception {
        int result;
        if ((int1 < 1 || int1 > 10) || (int2 < 1 || int2 > 10)){
            throw new Exception("Введены некорректные данные");
        }

        switch (sign) {
            case "+" -> result = int1 + int2;
            case "-" -> result = int1 - int2;
            case "*" -> result = int1 * int2;
            case "/" -> result = int1 / int2;
            default -> throw new Exception("Введён некорректный знак арифимитического выражения");
        }
        if(isArabic){
            System.out.println("Результат введённого арифмитического выражения: "+ result);
        }else{
            if(result < 1){
                throw new Exception("Римские числа всегда больше нуля");
            }
            System.out.println("Результат введённого арифмитического выражения: "+ convertNumToRoman(result));
        }
    }

    public static String convertNumToRoman (int numArabian) {
        String[] roman = {"O", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII", "XIII", "XIV", "XV", "XVI", "XVII", "XVIII", "XIX", "XX",
                "XXI", "XXII", "XXIII", "XXIV", "XXV", "XXVI", "XXVII", "XXVIII", "XXIX", "XXX", "XXXI", "XXXII", "XXXIII", "XXXIV", "XXXV", "XXXVI", "XXXVII", "XXXVIII", "XXXIX", "XL",
                "XLI", "XLII", "XLIII", "XLIV", "XLV", "XLVI", "XLVII", "XLVIII", "XLIX", "L", "LI", "LII", "LIII", "LIV", "LV", "LVI", "LVII", "LVIII", "LIX", "LX",
                "LXI", "LXII", "LXIII", "LXIV", "LXV", "LXVI", "LXVII", "LXVIII", "LXIX", "LXX",
                "LXXI", "LXXII", "LXXIII", "LXXIV", "LXXV", "LXXVI", "LXXVII", "LXXVIII", "LXXIX", "LXXX",
                "LXXXI", "LXXXII", "LXXXIII", "LXXXIV", "LXXXV", "LXXXVI", "LXXXVII", "LXXXVIII", "LXXXIX", "XC",
                "XCI", "XCII", "XCIII", "XCIV", "XCV", "XCVI", "XCVII", "XCVIII", "XCIX", "C"
        };
        return roman[numArabian];
    }

    private static int romanToNumber (String roman){
        switch (roman) {
            case "I" -> {
                return 1;
            }
            case "II" -> {
                return 2;
            }
            case "III" -> {
                return 3;
            }
            case "IV" -> {
                return 4;
            }
            case "V" -> {
                return 5;
            }
            case "VI" -> {
                return 6;
            }
            case "VII" -> {
                return 7;
            }
            case "VIII" -> {
                return 8;
            }
            case "IX" -> {
                return 9;
            }
            case "X" -> {
                return 10;
            }
            default -> {
                return -1;
            }
        }
    }
}
